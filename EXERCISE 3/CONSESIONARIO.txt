-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.additional_features
(
    id_adittional integer NOT NULL DEFAULT nextval('additional_features_id_adittional_seq'::regclass),
    air_conditioning bit(1) NOT NULL,
    air_bag bit(1) NOT NULL,
    metalic_paint bit(1) NOT NULL,
    CONSTRAINT additional_features_pkey PRIMARY KEY (id_adittional)
);

CREATE TABLE IF NOT EXISTS public.cars
(
    id_frame_number integer NOT NULL DEFAULT nextval('cars_id_frame_number_seq'::regclass),
    brand character varying(15) COLLATE pg_catalog."default" NOT NULL,
    price numeric(10, 2) NOT NULL,
    discount numeric(2, 2) NOT NULL,
    id_model integer NOT NULL,
    CONSTRAINT cars_pkey PRIMARY KEY (id_frame_number)
);

CREATE TABLE IF NOT EXISTS public.consessionaire
(
    id_consessionaire integer NOT NULL DEFAULT nextval('consessionaire_id_consessionaire_seq'::regclass),
    id_location integer NOT NULL,
    id_frame_number integer NOT NULL,
    CONSTRAINT consessionaire_pkey PRIMARY KEY (id_consessionaire)
);

CREATE TABLE IF NOT EXISTS public.equipment_features
(
    id_equipment_features integer NOT NULL DEFAULT nextval('equipment_features_id_equipment_features_seq'::regclass),
    driver_airbag bit(1) NOT NULL,
    central_looking bit(1) NOT NULL,
    horsepower numeric NOT NULL,
    CONSTRAINT equipment_features_pkey PRIMARY KEY (id_equipment_features)
);

CREATE TABLE IF NOT EXISTS public.location_office
(
    id_location integer NOT NULL DEFAULT nextval('location_office_id_location_seq'::regclass),
    id_main integer NOT NULL,
    id_official integer NOT NULL,
    CONSTRAINT location_office_pkey PRIMARY KEY (id_location)
);

CREATE TABLE IF NOT EXISTS public.main_office
(
    id_main integer NOT NULL DEFAULT nextval('main_office_id_main_seq'::regclass),
    name_office character varying(15) COLLATE pg_catalog."default" NOT NULL,
    addrees character varying(15) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT main_office_pkey PRIMARY KEY (id_main)
);

CREATE TABLE IF NOT EXISTS public.model
(
    id_model integer NOT NULL DEFAULT nextval('model_id_model_seq'::regclass),
    id_equipment_features integer NOT NULL,
    id_adittional integer NOT NULL,
    CONSTRAINT model_pkey PRIMARY KEY (id_model)
);

CREATE TABLE IF NOT EXISTS public.official_service
(
    id_official integer NOT NULL DEFAULT nextval('official_service_id_official_seq'::regclass),
    name_official character varying(15) COLLATE pg_catalog."default" NOT NULL,
    address character varying(15) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT official_service_pkey PRIMARY KEY (id_official)
);

CREATE TABLE IF NOT EXISTS public.quote_features
(
    price numeric(10, 2),
    id_adittional integer NOT NULL
);

CREATE TABLE IF NOT EXISTS public.sell
(
    id_sell integer NOT NULL DEFAULT nextval('sell_id_sell_seq'::regclass),
    sale_price numeric(10, 2) NOT NULL,
    deliver_date date NOT NULL,
    id_consessionaire integer NOT NULL,
    id_seller integer NOT NULL,
    id_way_pay integer NOT NULL,
    CONSTRAINT sell_pkey PRIMARY KEY (id_sell)
);

CREATE TABLE IF NOT EXISTS public.seller
(
    id_seller integer NOT NULL DEFAULT nextval('seller_id_seller_seq'::regclass),
    first_name character varying(30) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(30) COLLATE pg_catalog."default" NOT NULL,
    addrees character varying(25) COLLATE pg_catalog."default" NOT NULL,
    city character varying(25) COLLATE pg_catalog."default",
    CONSTRAINT seller_pkey PRIMARY KEY (id_seller)
);

CREATE TABLE IF NOT EXISTS public.technical_data
(
    horsepower numeric NOT NULL,
    displacement numeric NOT NULL,
    id_technical_data integer NOT NULL,
    CONSTRAINT technical_data_pkey PRIMARY KEY (id_technical_data)
);

CREATE TABLE IF NOT EXISTS public.way_pay
(
    id_way_pay integer NOT NULL DEFAULT nextval('way_pay_id_way_pay_seq'::regclass),
    cash bit(1) NOT NULL,
    credit bit(1) NOT NULL,
    CONSTRAINT way_pay_pkey PRIMARY KEY (id_way_pay)
);

ALTER TABLE IF EXISTS public.cars
    ADD CONSTRAINT cars_id_model_fkey FOREIGN KEY (id_model)
    REFERENCES public.model (id_model) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.consessionaire
    ADD CONSTRAINT consessionaire_id_frame_number_fkey FOREIGN KEY (id_frame_number)
    REFERENCES public.cars (id_frame_number) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.consessionaire
    ADD CONSTRAINT consessionaire_id_location_fkey FOREIGN KEY (id_location)
    REFERENCES public.location_office (id_location) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.location_office
    ADD CONSTRAINT location_office_id_main_fkey FOREIGN KEY (id_main)
    REFERENCES public.main_office (id_main) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.location_office
    ADD CONSTRAINT location_office_id_official_fkey FOREIGN KEY (id_official)
    REFERENCES public.official_service (id_official) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.model
    ADD CONSTRAINT model_id_adittional_fkey FOREIGN KEY (id_adittional)
    REFERENCES public.additional_features (id_adittional) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.model
    ADD CONSTRAINT model_id_equipment_features_fkey FOREIGN KEY (id_equipment_features)
    REFERENCES public.equipment_features (id_equipment_features) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.quote_features
    ADD CONSTRAINT quote_features_id_adittional_fkey FOREIGN KEY (id_adittional)
    REFERENCES public.additional_features (id_adittional) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.sell
    ADD CONSTRAINT sell_id_consessionaire_fkey FOREIGN KEY (id_consessionaire)
    REFERENCES public.consessionaire (id_consessionaire) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.sell
    ADD CONSTRAINT sell_id_seller_fkey FOREIGN KEY (id_seller)
    REFERENCES public.seller (id_seller) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.sell
    ADD CONSTRAINT sell_id_way_pay_fkey FOREIGN KEY (id_way_pay)
    REFERENCES public.way_pay (id_way_pay) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;